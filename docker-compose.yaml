version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6380:${REDIS_PORT}"
    networks:
      - mynetwork

  mysql:
    image: mysql:8.0
    restart: always
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3308:${DB_PORT}" 
    networks:
      - mynetwork
    volumes:
      - ./init-sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uuser1", "-ppassword1"]
      interval: 10s
      timeout: 5s
      retries: 10

  payment-service:
    build:
      context: ./server/payment-service
    container_name: payment-service
    environment:
      - STRIPE_KEY=${STRIPE_KEY}
    ports:
      - "8083:${PAYMENT_SERVICE_PORT}"
    networks:
      - mynetwork

  authentication-service:
    build:
      context: ./server/authentication-service
    container_name: authentication-service
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_AUTH_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    ports:
      - "8081:${AUTH_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mynetwork

  common-data-service:
    build:
      context: ./server/common-data-service
    container_name: common-data-service
    environment: 
      - SPRING_DATASOURCE_URL=${COMMON_SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${COMMON_SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${COMMON_SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${COMMON_SPRING_PROFILES_ACTIVE}
      - SPRING_CACHE_REDIS_TIME_TO_LIVE=${COMMON_SPRING_CACHE_REDIS_TTL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8082:${COMMON_SERVICE_DATA_PORT}"
    networks:
      - mynetwork
  
  search-service:
    build: 
      context: ./server/search-service
    container_name: search-service
    ports:
      - '3002:${SUGGESTION_SERVICE_PORT}'
    volumes:
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - API_URL=http://common-data-service:8082/search-suggestion-list 
    networks:
      - mynetwork
  
  front:
    build:
      context: ./client
      args:
        REACT_APP_AUTHENTICATION_SERVICE_URL: http://localhost:8081
        REACT_APP_COMMON_DATA_SERVICE_URL: http://localhost:8082
        REACT_APP_PAYMENT_SERVICE_URL: http://localhost:8083
        REACT_APP_SEARCH_SUGGESTION_SERVICE_URL: http://localhost:3002
    container_name: front
    ports:
      - "3000:${REACT_APP_PORT}"
    depends_on:
      - authentication-service
      - common-data-service
      - payment-service
      - search-service
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql_data:
    driver: local
